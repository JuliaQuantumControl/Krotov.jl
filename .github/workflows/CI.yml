name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: |
          # Install dev-version of QuantumControlBase
          julia --project=@. -e '
            using Pkg
            Pkg.develop(url="https://github.com/QuantumControl-jl/QuantumControlBase.jl.git#master")'
      - run: |
          # Instantiate Pkg
          # This is instead of
          #   - uses: julia-actions/julia-buildpkg@v1
          # in order to allow for dev-install of unregistered QuantumControlBase
          julia --project=@. -e '
            using Pkg
            Pkg.instantiate()'
#     - uses: julia-actions/julia-buildpkg@v1
      - run: |
          # Run tests
          julia --project=@. -e '
            using Pkg
            Pkg.activate(".")
            Pkg.test(coverage=true)'
#     - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: |
          # Instantiate Pkg
          julia --project=docs -e '
            using Pkg
            print("Develop-install QuantumControlBase")
            Pkg.develop(url="https://github.com/QuantumControl-jl/QuantumControlBase.jl.git#master")
            print("Develop-install package")
            Pkg.develop(PackageSpec(path=pwd()))
            print("Pkg.instantiate()")
            Pkg.instantiate()'
      - run: |
          # Run doctests
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using Krotov
            DocMeta.setdocmeta!(Krotov, :DocTestSetup, :(using Krotov); recursive=true)
            doctest(Krotov)'
      - run: |
          # Make documentation
          julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          JULIA_DEBUG: Documenter
